/*
* This file was generated by the CommonAPI Generators. 
* Used org.genivi.commonapi.core 2.1.4.
* Used org.franca.core 0.8.9.
*
* 
*/
#ifndef ORG_GENIVI_MEDIAMANAGER_Browser_DBUS_STUB_ADAPTER_H_
#define ORG_GENIVI_MEDIAMANAGER_Browser_DBUS_STUB_ADAPTER_H_

#include <org/genivi/MediaManager/BrowserStub.h>

#if !defined (COMMONAPI_INTERNAL_COMPILATION)
#define COMMONAPI_INTERNAL_COMPILATION
#endif

#include <CommonAPI/DBus/DBusStubAdapterHelper.h>
#include <CommonAPI/DBus/DBusStubAdapter.h>
#include <CommonAPI/DBus/DBusFactory.h>
#include <CommonAPI/DBus/DBusServicePublisher.h>

#undef COMMONAPI_INTERNAL_COMPILATION

namespace org {
namespace genivi {
namespace MediaManager {

typedef CommonAPI::DBus::DBusStubAdapterHelper<BrowserStub> BrowserDBusStubAdapterHelper;

class BrowserDBusStubAdapter: public BrowserStubAdapter, public BrowserDBusStubAdapterHelper {
 public:
    BrowserDBusStubAdapter(
            const std::shared_ptr<CommonAPI::DBus::DBusFactory>& factory,
            const std::string& commonApiAddress,
            const std::string& dbusInterfaceName,
            const std::string& dbusBusName,
            const std::string& dbusObjectPath,
            const std::shared_ptr<CommonAPI::DBus::DBusProxyConnection>& dbusConnection,
            const std::shared_ptr<CommonAPI::StubBase>& stub);

    ~BrowserDBusStubAdapter();


    

    const StubDispatcherTable& getStubDispatcherTable();
    
    void deactivateManagedInstances();

 protected:
    virtual const char* getMethodsDBusIntrospectionXmlData() const;
    
  private:
};

} // namespace MediaManager
} // namespace genivi
} // namespace org

#endif // ORG_GENIVI_MEDIAMANAGER_Browser_DBUS_STUB_ADAPTER_H_
